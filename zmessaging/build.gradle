apply plugin: 'com.android.library'
apply plugin: 'jp.leafytree.android-scala'
android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion Config.buildToolsVersion

    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion

        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }

    }

    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }

    testOptions {
        unitTests.all {
            forkEvery 1
            jvmArgs "-Xmx4096M", "-XX:MaxPermSize=4096M", "-XX:+CMSClassUnloadingEnabled",
                "-Djava.net.preferIPv4Stack=true", "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n"
        }
    }

}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
    jcenter()
    google()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-source", "1.7", "-target", "1.7", "-encoding", "UTF-8"]
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-feature", "-target:jvm-1.7", "-Xfuture", //"-Xfatal-warnings",
      "-deprecation","-encoding", "UTF-8", "-Xmax-classfile-name", "128" ]
}

def versions = [
    okHttp : "3.9.0",
    circe : "0.9.3",
]

dependencies {

    api project(':macrosupport')
    api "org.scala-lang.modules:scala-async_2.11:0.9.7"
    api "com.squareup.okhttp3:okhttp:$versions.okHttp"
    api "com.googlecode.libphonenumber:libphonenumber:7.1.1"
    api "com.wire:cryptobox-android:1.1.3"
    api "com.wire:backend-api-proto:1.1"
    api "io.circe:circe-core_2.11:$versions.circe"
    api "io.circe:circe-generic_2.11:$versions.circe"
    api "io.circe:circe-parser_2.11:$versions.circe"
    api "com.wire:icu4j-shrunk:57.1"
    api "com.googlecode.mp4parser:isoparser:1.1.7"
    api "com.github.ghik:silencer-lib_2.11:0.6"
    api "com.github.joshjdevl.libsodiumjni:libsodium-jni-aar:2.0.2"

    //Provided dependencies
    compileOnly "com.softwaremill.macwire:macros_2.11:2.2.2"
    compileOnly("com.google.android.gms:play-services-base:11.0.0") {
        exclude(group: "com.android.support", module: "support-v4")
    }
    compileOnly "com.wire:avs:3.4.100"
    compileOnly "androidx.core:core:1.0.0"
    compileOnly "org.threeten:threetenbp:1.3.8"
    compileOnly "net.java.dev.jna:jna:4.4.0"
    compileOnly "org.robolectric:android-all:9-robolectric-4913185-2"
    compileOnly "androidx.media:media:1.1.0"

    //Test dependencies
    testImplementation("org.scalatest:scalatest_2.11:3.0.5") {
        exclude module: 'scala-library'
    }
    testImplementation "org.scalamock:scalamock_2.11:4.1.0"
    testImplementation "org.scalacheck:scalacheck_2.11:1.14.0"
    testImplementation("com.wire:robotest_2.11:1.0.1") {
        exclude(group: "org.scalatest", module: "scalatest")
    }
    testImplementation "org.robolectric:android-all:9-robolectric-4913185-2"
    testImplementation "junit:junit:4.8.2"
    testImplementation "io.fabric8:mockwebserver:0.1.0"
    testImplementation "org.apache.httpcomponents:httpclient:4.5.3"

}

/**
 * generate Messages.java to dir of src/main/java
 */
import com.github.os72.protocjar.Protoc
task messagesProto(){
    doLast {
        String[] args = [
            "-v300",
            "--javanano_out=store_unknown_fields=true:${project.projectDir}${File.separator}src${File.separator}main${File.separator}java",
            "--proto_path=${project.rootDir}${File.separator}proto",
            "${project.rootDir}${File.separator}proto${File.separator}messages.proto"
        ]
        def exitCode = Protoc.runProtoc(args)
        if (exitCode != 0) {
            println("--------------protoc failed with exit code $exitCode")
        } else {
            println("+++++++++++generate protoc java file ok")
        }
    }
}



